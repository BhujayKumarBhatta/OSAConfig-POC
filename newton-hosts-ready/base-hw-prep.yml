---
- hosts: base_hw_prep_for_openstack
  vars_files: 
    - base-hardware-prep-defination.yml    
  become: true
  
  roles:
   - role: install-apt-pkg
   - role: create-interfaces-bridges #tag configure-network 
   
   - role: squidproxy #tag squidproxy
     when: "'squidproxy'  in target_hosts[ansible_hostname]['roles']"
     
   - role: ntpmaster #tag ntp
     when: "'ntpmaster'  in target_hosts[ansible_hostname]['roles']" 
      
   - role: enable-firewall #enable-firewall
     when: "'firewall'  in target_hosts[ansible_hostname]['roles']"
     
   - role: configure-chrony #tag chrony
     when: "'ntpmaster' not in target_hosts[ansible_hostname]['roles']"  
     
   - role: configure-proxy-apt
     when: "'haproxy' not in target_hosts[ansible_hostname]['roles']"
      
   - role: configure-iommu-for-nova-compute
     when: "'novacompute'  in target_hosts[ansible_hostname]['roles']"
   
   - role: configure-nfs-server
     when: "'nfs'  in target_hosts[ansible_hostname]['roles']" 
   
- hosts: localhost
  vars_files: 
    - base-hardware-prep-defination.yml    
  become: true
  tasks:   
  - name: Server will be rebooted and waited in the following order, faster server may restart before ansible wait is shown as completed
    debug:
      msg: "{{ item }}"
    with_items: "{{ servers_to_reboot }}"

  - name: Reboot the remote server from control host
    shell: "ssh root@{{ item }} shutdown -r now"
    async: 180
    poll: 20
    with_items: "{{ servers_to_reboot }}"
    ignore_errors: true
    when: "servers_to_reboot !=''"
    
  - name: 'Waiting OS boot and SSH readiness'
    wait_for: 
         port: 22        
         host: "{{ item }}"
         delay: 1
         timeout: 3000
    delay: 30
    retries: 50
    with_items: "{{ servers_to_reboot }}"
    when: "servers_to_reboot !=''"
    tags: rebootserver
     
  